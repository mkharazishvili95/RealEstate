@using RealEstate_Manage.Extensions
@model RealEstate_Manage.Models.Agency.List.AgencyListViewModel
<meta name="viewport" content="width=device-width, initial-scale=1.0">

@{
    ViewData["Title"] = "სააგენტოების სია";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="mb-0"></h4>
    <a href="@Url.Action("ExportAgenciesToCsv", "Manage", new {
        AgencyId = Model.Filter.AgencyId,
        Name = Model.Filter.Name,
        AgencyType = Model.Filter.AgencyType,
        Email = Model.Filter.Email,
        IdentificationNumber = Model.Filter.IdentificationNumber,
        OwnerPIN = Model.Filter.OwnerPIN,
        PhoneNumber = Model.Filter.PhoneNumber,
        IsDeleted = Model.Filter.IsDeleted,
        IsApproved = Model.Filter.IsApproved,
        CreateDateFrom = Model.Filter.CreateDateFrom?.ToString("yyyy-MM-dd"),
        CreateDateTo = Model.Filter.CreateDateTo?.ToString("yyyy-MM-dd"),
        UpdateDateFrom = Model.Filter.UpdateDateFrom?.ToString("yyyy-MM-dd"),
        UpdateDateTo = Model.Filter.UpdateDateTo?.ToString("yyyy-MM-dd"),
        DeleteDateFrom = Model.Filter.DeleteDateFrom?.ToString("yyyy-MM-dd"),
        DeleteDateTo = Model.Filter.DeleteDateTo?.ToString("yyyy-MM-dd")
    })" class="btn btn-success btn-sm">
        <i class="bi bi-download"></i> ექსპორტი CSV-ში
    </a>
</div>


<h2>სააგენტოები</h2>

<form asp-action="AgencyList" method="get" class="container-fluid">
    <table class="table table-bordered table-striped w-100">
        <thead class="thead-dark">
            <tr>
                <th>ID</th>
                <th>სახელი</th>
                <th>ტიპი</th>
                <th>Email</th>
                <th>საიდენტიფიკაციო კოდი</th>
                <th>PIN</th>
                <th>მობილური</th>
                <th>წაშლილი</th>
                <th>დადასტურებული</th>
                <th>შექმნის თარიღი</th>
                <th>განახლების თარიღი</th>
                <th>წაშლის თარიღი</th>
                <th></th>
            </tr>
            <tr>
                <th><input type="text" name="AgencyId" value="@Model.Filter.AgencyId" class="form-control form-control-sm" /></th>
                <th><input type="text" name="Name" value="@Model.Filter.Name" class="form-control form-control-sm" /></th>
                <th>
                    @Html.DropDownList("AgencyType", Model.AgencyTypeOptions, new { @class = "form-control form-control-sm" })
                </th>
                <th><input type="text" name="Email" value="@Model.Filter.Email" class="form-control form-control-sm" /></th>
                <th><input type="text" name="IdentificationNumber" value="@Model.Filter.IdentificationNumber" class="form-control form-control-sm" /></th>
                <th><input type="text" name="OwnerPIN" value="@Model.Filter.OwnerPIN" class="form-control form-control-sm" /></th>
                <th><input type="text" name="PhoneNumber" value="@Model.Filter.PhoneNumber" class="form-control form-control-sm" /></th>
                <th>
                    @Html.DropDownList("IsDeleted", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "ყველა", Value = "" },
                    new SelectListItem { Text = "კი", Value = "true" },
                    new SelectListItem { Text = "არა", Value = "false" }
                    }, new { @class = "form-control form-control-sm" })
                </th>
                <th>
                    @Html.DropDownList("IsApproved", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "ყველა", Value = "" },
                    new SelectListItem { Text = "კი", Value = "true" },
                    new SelectListItem { Text = "არა", Value = "false" }
                    }, new { @class = "form-control form-control-sm" })
                </th>
                <th>
                    <input type="date" name="CreateDateFrom" value="@Model.Filter.CreateDateFrom?.ToString("yyyy-MM-dd")" class="form-control form-control-sm mb-1" />
                    <input type="date" name="CreateDateTo" value="@Model.Filter.CreateDateTo?.ToString("yyyy-MM-dd")" class="form-control form-control-sm" />
                </th>
                <th>
                    <input type="date" name="UpdateDateFrom" value="@Model.Filter.UpdateDateFrom?.ToString("yyyy-MM-dd")" class="form-control form-control-sm mb-1" />
                    <input type="date" name="UpdateDateTo" value="@Model.Filter.UpdateDateTo?.ToString("yyyy-MM-dd")" class="form-control form-control-sm" />
                </th>
                <th>
                    <input type="date" name="DeleteDateFrom" value="@Model.Filter.DeleteDateFrom?.ToString("yyyy-MM-dd")" class="form-control form-control-sm mb-1" />
                    <input type="date" name="DeleteDateTo" value="@Model.Filter.DeleteDateTo?.ToString("yyyy-MM-dd")" class="form-control form-control-sm" />
                </th>
                <th>
                    <div class="d-flex justify-content-end mb-4">
                        <button type="submit" class="btn btn-primary btn-sm">ძიება</button>
                        <a href="@Url.Action("AgencyList", "Manage")" class="btn btn-secondary btn-sm ms-2">გასუფთავება</a>
                    </div>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Agencies != null && Model.Agencies.Any())
            {
                foreach (var agency in Model.Agencies)
                {
                    <tr>
                        <td>@agency.AgencyId</td>
                        <td>@agency.Name</td>
                        <td>@(agency.AgencyType?.ToGeorgian())</td>
                        <td>@agency.Email</td>
                        <td>@agency.IdentificationNumber</td>
                        <td>@agency.OwnerPIN</td>
                        <td>@agency.PhoneNumber</td>
                        <td class="@(agency.IsDeleted ? "deleted-text" : "approved-text")">
                            @(agency.IsDeleted ? "კი" : "არა")
                        </td>
                        <td class="@(agency.IsApproved ? "approved-text" : "deleted-text")">
                            @(agency.IsApproved ? "კი" : "არა")
                        </td>
                        <td>@agency.CreateDate?.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@agency.UpdateDate?.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@agency.DeleteDate?.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    მოქმედება
                                </button>
                                <ul class="dropdown-menu">
                                    @if (!agency.IsApproved)
                                    {
                                        <li>
                                            <button type="button" class="dropdown-item text-primary approve-agency" data-id="@agency.AgencyId">
                                                <i class="bi bi-check-circle"></i> დადასტურება
                                            </button>
                                        </li>
                                    }
                                    @if (agency.IsDeleted)
                                    {
                                        <li>
                                            <button type="button" class="dropdown-item text-success restore-agency" data-id="@agency.AgencyId">
                                                <i class="bi bi-arrow-counterclockwise"></i> აღდგენა
                                            </button>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <button type="button" class="dropdown-item text-danger delete-agency" data-id="@agency.AgencyId">
                                                <i class="bi bi-trash"></i> წაშლა
                                            </button>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>


                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="12" class="text-center">სააგენტოები ვერ მოიძებნა.</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-center mt-4">
        @if (Model.Page > 1)
        {
            <a class="btn btn-secondary mx-1" asp-action="AgencyList" asp-route-Page="@(Model.Page - 1)">უკან</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a class="btn @(i == Model.Page ? "btn-primary" : "btn-outline-primary") mx-1"
               asp-action="AgencyList" asp-route-Page="@i">@i</a>
        }

        @if (Model.Page < Model.TotalPages)
        {
            <a class="btn btn-secondary mx-1" asp-action="AgencyList" asp-route-Page="@(Model.Page + 1)">წინ</a>
        }
    </div>

    <div class="d-flex justify-content-center mt-4">
        <a href="@Url.Action("Index", "Dashboard")" class="btn btn-primary">← უკან დაბრუნება</a>
    </div>
</form>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    table {
        min-width: 100%;
    }

    body, html {
        margin: 0;
        padding: 0;
        width: 100%;
    }

    .container-fluid {
        padding: 0;
    }

    .container {
        max-width: 90% !important;
        padding: 0;
    }

    .dropdown-toggle {
        background-color: #6f42c1;
        color: white;
        border-radius: 8px;
        padding: 10px 15px;
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .dropdown-toggle:hover {
            background-color: #5a32a3;
            transform: scale(1.05);
        }

    .swal2-popup {
        width: 400px !important;
        font-size: 14px; 
    }

    .swal2-input {
        font-size: 14px;
        padding: 6px 10px;
    }

    .swal2-title {
        font-size: 16px;
    }

    .swal2-html-container {
        font-size: 14px;
    }

    .swal2-confirm, .swal2-cancel {
        font-size: 13px;
        padding: 6px 12px;
    }

    .deleted-text {
        color: #dc3545;
        font-weight: bold;
    }

    .approved-text {
        color: green;
        font-weight: bold;
    }


</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
                document.querySelectorAll(".approve-agency").forEach(btn => {
            btn.addEventListener("click", function () {
                const agencyId = this.dataset.id;

                Swal.fire({
                    title: 'დადასტურება',
                    text: 'გსურს სააგენტოს დადასტურება?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'დიახ',
                    cancelButtonText: 'არა'
                }).then(result => {
                    if (result.isConfirmed) {
                        fetch('/Manage/ApproveAgency', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ agencyId })
                        })
                        .then(response => response.json())
                        .then(data => {
                            Swal.fire({
                                icon: data.success ? 'success' : 'error',
                                text: data.message
                            }).then(() => {
                                if (data.success) location.reload();
                            });
                        });
                    }
                });
            });
        });


        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".delete-agency").forEach(btn => {
                btn.addEventListener("click", function () {
                    const agencyId = this.dataset.id;

                    Swal.fire({
                        title: 'დარწმუნებული ხარ?',
                        text: 'გთხოვთ მიუთითეთ წაშლის მიზეზი:',
                        input: 'text',
                        inputPlaceholder: 'წაშლის მიზეზი',
                        showCancelButton: true,
                        confirmButtonText: 'წაშლა',
                        cancelButtonText: 'გაუქმება',
                        inputValidator: (value) => {
                            if (!value) return null;
                        }
                    }).then(result => {
                        if (result.isConfirmed) {
                            fetch('/Manage/DeleteAgency', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ agencyId, deleteReason: result.value })
                            })
                            .then(response => response.json())
                            .then(data => {
                                Swal.fire({
                                    icon: data.success ? 'success' : 'error',
                                    text: data.message
                                }).then(() => {
                                    if (data.success) location.reload();
                                });
                            });
                        }
                    });
                });
            });

            document.querySelectorAll(".restore-agency").forEach(btn => {
                btn.addEventListener("click", function () {
                    const agencyId = this.dataset.id;

                    Swal.fire({
                        title: 'გსურს სააგენტოს აღდგენა?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'დიახ',
                        cancelButtonText: 'არა'
                    }).then(result => {
                        if (result.isConfirmed) {
                            fetch('/Manage/RestoreAgency', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ agencyId })
                            })
                            .then(response => response.json())
                            .then(data => {
                                Swal.fire({
                                    icon: data.success ? 'success' : 'error',
                                    text: data.message
                                }).then(() => {
                                    if (data.success) location.reload();
                                });
                            });
                        }
                    });
                });
            });
        });
    </script>
}

