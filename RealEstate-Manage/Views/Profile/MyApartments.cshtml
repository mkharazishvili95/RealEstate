@using RealEstate.Common.Enums.Apartment
@using RealEstate_Manage.Helpers

@{
    ViewBag.Title = "ჩემი განცხადებები";

    var selectedStatus = Context.Request.Query["status"].ToString();

    var statusText = !string.IsNullOrEmpty(selectedStatus)
        ? ApartmentStatusHelper.GetGeorgianStatus((ApartmentStatus)Enum.Parse(typeof(ApartmentStatus), selectedStatus))
        : "ყველა სტატუსი";
}

<h2 class="text-center my-4">🏘️ ჩემი განცხადებები - @statusText</h2>

<form method="get" class="mb-4 d-flex align-items-center gap-2">
    <label for="status" class="form-label mb-0">ფილტრი სტატუსით:</label>
    <select id="status" name="status" class="form-select" style="width: 200px;" onchange="this.form.submit()">
        <option value="">ყველა</option>
        @foreach (ApartmentStatus status in Enum.GetValues(typeof(ApartmentStatus)))
        {
            var statusValue = (int)status;
            bool isSelected = selectedStatus == statusValue.ToString();
            if (isSelected)
            {
                <option value="@statusValue" selected="selected">@ApartmentStatusHelper.GetGeorgianStatus(status)</option>
            }
            else
            {
                <option value="@statusValue">@ApartmentStatusHelper.GetGeorgianStatus(status)</option>
            }
        }
    </select>
</form>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        @(ViewBag.Error == "Apartments not found." ? "განცხადებები ვერ მოიძებნა." : ViewBag.Error)
    </div>
}
else if (Model.Count == 0)
{
    <div class="alert alert-info">
        თქვენ არ გაქვთ განცხადებები.
    </div>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>სათაური</th>
                <th>აღწერა</th>
                <th>ფასი</th>
                <th>სტატუსი</th>
                <th>სააგენტო</th>
                <th>დაბლოკვის მიზეზი</th>
                <th>შექმნის თარიღი</th>
                <th>განახლების თარიღი</th>
                <th>დასრულების თარიღი</th>
                <th>წაშლის თარიღი</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var apt in Model)
            {
                <tr>
                    <td>@apt.Title</td>
                    <td>@apt.Description</td>
                    @if (apt.Price != 0) 
                    {
                        <td>@($"{apt.Price:N2} {CurrencyHelper.GetCurrencySymbol(apt.CurrencyId)}")</td>
                    }
                    else
                    {
                        <td>@("—")</td>
                    }
                    <td>@ApartmentStatusHelper.GetGeorgianStatus((ApartmentStatus)apt.Status)</td>
                    <td>@(apt.AgencyName ?? "—")</td>
                    <td>
                        @if (!string.IsNullOrEmpty(apt.BlockReason))
                        {
                            <span class="text-danger">@apt.BlockReason</span>
                        }
                        else
                        {
                            <span class="text-success"></span>
                        }
                    </td>
                    <td>@apt.CreateDate?.ToString("yyyy-MM-dd")</td>
                    <td>@apt.UpdateDate?.ToString("yyyy-MM-dd")</td>
                    <td>@apt.EndDate?.ToString("yyyy-MM-dd")</td>
                    <td>@apt.DeleteDate?.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}
